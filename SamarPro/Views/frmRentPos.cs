using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using Microsoft.VisualBasic;
using SamarPro.Reports;
using DevExpress.XtraReports.UI;

namespace SamarPro.Views
{
    public partial class frmRentPos : Form
    {
        TransationModule TR = new TransationModule();
        int Rent_id;
        CONTROLS.BusneisLayer BL = new CONTROLS.BusneisLayer();
        void CLEAR_TEXT_BOX(Control CN)
        {

            foreach (Control C in CN.Controls)
                if (C is TextBox)

                    ((TextBox)C).Clear();

                else

                    CLEAR_TEXT_BOX(C);

        }
        int ID;
        void get_price()
        {
            ID = Convert.ToInt32(combo_Rent.SelectedValue);
            using (var context = new db_model())
            {
                Double price = context.Rents.Where(ss => ss.ID == ID)
                            .Select(ss => ss.Price)
                            .SingleOrDefault();
                TXT_PRICE.Text = price.ToString();
            }
        }
        void Amal(Boolean SOL)
        {
            btn_del.Enabled = SOL;
            btn_edit.Enabled = SOL;
            btn_save.Enabled = SOL;
        }
        void combo()
        {
            combo_Rent.DataSource = BL.getRent_Name();
            combo_Rent.DisplayMember = "Type";
            combo_Rent.ValueMember = "ID";

            
        }
        public frmRentPos()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource
            sqlDataSource1.Fill();
        }

        private void bunifuGradientPanel4_Paint(object sender, PaintEventArgs e)
        {

        }

        private void btn_new_Click(object sender, EventArgs e)
        {
            try
            {
                CLEAR_TEXT_BOX(this);
                TXT_Resave.Visible = true;
                bnl_1.Enabled = true;
                btn_save.Enabled = true;
                btn_new.Enabled = false;
                btn_del.Enabled = false;
                bunifuFlatButton4.Enabled = false;
                btn_edit.Enabled = false;
                PAID.ReadOnly = false;
                WITHDROW.ReadOnly = false;
                PAID.Enabled = true;
                WITHDROW.Enabled = true;
                lbl_cash.Visible = false;
                txt_cash.Visible = false;
                BTN_PAY.Enabled = false;
                dr.DesibleCombo(bnl_1, true);
                //  combo();
                TXT_Emp.Text = Program.Casheir_Name;
                EnteryDate.Text = DateTime.Now.ToShortDateString();

            }
            catch
            {
                return;
            }
            
        }

        private void frmRentPos_Load(object sender, EventArgs e)
        {
            bnl_1.Enabled = false;
            combo_Rent.Text = "";
            TXT_PRICE.Text = "0";
            TXT_Emp.Text = Program.Casheir_Name;
            Amal(false);
        }

        private void bunifuImageButton1_Click(object sender, EventArgs e)
        {
            Close();
        }

        private void btn_save_Click(object sender, EventArgs e)
        {
            if (TXT_Name.Text == string.Empty || TXT_PRICE.Text == string.Empty || TXT_Resave.Text == string.Empty)
            {
                TR.Show_Message("الرجال إدخال جميع الحقول");
                return;
            }
            db_model db = new db_model();
            RentPos ac = new RentPos
            {

                CusName = TXT_Name.Text,
                CusPhone = TXT_Phone.Text,
                EmpName = TXT_Emp.Text,
                Type = Convert.ToInt32(combo_Rent.SelectedValue),
                ReSave = TXT_Resave.Text,
                Paid = Convert.ToDouble(PAID.Text),
                Withdrow = Convert.ToDouble(WITHDROW.Text),
                DayDate = EnteryDate.Value

            };
            db.Entry(ac).State = System.Data.Entity.EntityState.Added;
            db.SaveChanges();
            sqlDataSource1.Fill();
            TR.Show_Message("تم إضافة فاتورة إيجار");
            bnl_1.Enabled = false;
            Amal(false);
            btn_save.Enabled = false;
            btn_new.Enabled = true;
            CLEAR_TEXT_BOX(this);
            TXT_Emp.Text = Program.Casheir_Name;
            TR.EnterLog(": تم إضافة فاتورة إيجار بإسم عميل " + TXT_Name.Text);
        }

        private void combo_Rent_SelectedIndexChanged(object sender, EventArgs e)
        {
            get_price();
            
        }
        
        private void PAID_KeyDown(object sender, KeyEventArgs e)
        {
           
        }

        private void PAID_Leave(object sender, EventArgs e)
        {
            try
            {
                double TOTAL = Convert.ToDouble(TXT_PRICE.Text);
                double MADFO = Convert.ToDouble(PAID.Text);
                if (MADFO > TOTAL)
                {
                    TR.Show_Message("عذراً : المبلغ المدفوع أكبر من المبلغ الكلي");
                    return;
                }
                else
                {
                    double MOTABG = TOTAL - MADFO;
                    WITHDROW.Text = MOTABG.ToString();
                }
            }
            catch
            {
                return;

            }
        }
        private void btn_edit_Click(object sender, EventArgs e)
        {
                PAID.ReadOnly = true;
                db_model db = new db_model();
            if (lbl_cash.Visible == true || txt_cash.Visible == true)
            {
                RentPos ac = new RentPos
                {
                    ID = Rent_id,
                    CusName = TXT_Name.Text,
                    CusPhone = TXT_Phone.Text,
                    EmpName = TXT_Emp.Text,
                    Type = Convert.ToInt32(combo_Rent.SelectedValue),
                    ReSave = TXT_Resave.Text,
                    Paid = PAID1,
                    Withdrow = WITHDROW1,
                    DayDate = EnteryDate.Value

                };
                db.Entry(ac).State = System.Data.Entity.EntityState.Modified;
                db.SaveChanges();               
            }
            else
            {
                RentPos ac = new RentPos
                {
                    ID = Rent_id,
                    CusName = TXT_Name.Text,
                    CusPhone = TXT_Phone.Text,
                    EmpName = TXT_Emp.Text,
                    Type = Convert.ToInt32(combo_Rent.SelectedValue),
                    ReSave = TXT_Resave.Text,
                    Paid = Convert.ToDouble(PAID.Text),
                    Withdrow = Convert.ToDouble(WITHDROW.Text),
                    DayDate = EnteryDate.Value

                };
                db.Entry(ac).State = System.Data.Entity.EntityState.Modified;
                db.SaveChanges();              
            }
            sqlDataSource1.Fill();
            TR.Show_Message("تم تعديل فاتورة إيجار");
            bnl_1.Enabled = false;
            Amal(false);
            btn_edit.Enabled = false;
            btn_new.Enabled = true;
            CLEAR_TEXT_BOX(this);
            TXT_Emp.Text = Program.Casheir_Name;
            lbl_cash.Visible = false;
            txt_cash.Visible = false;
            BTN_PAY.Enabled = false;
            TR.EnterLog(": تم تعديل فاتورة إيجار برقم " + Rent_id);
        }
        private void btn_del_Click(object sender, EventArgs e)
        {
            if (MessageBox.Show("هل تريد حذف الفاتورة المحددة!", "عملية الحذف", MessageBoxButtons.YesNo, MessageBoxIcon.Exclamation) == DialogResult.Yes)
            {
                db_model db = new db_model();
                RentPos ac = (from c in db.RentPoss where c.ID == Rent_id select c).FirstOrDefault();
                db.RentPoss.Where(a => a.ID == Rent_id).Select(s => s).FirstOrDefault();
                db.Entry(ac).State = System.Data.Entity.EntityState.Deleted;
                db.SaveChanges();
                TR.Show_Message("تم حذف الفاتورة");
                sqlDataSource1.Fill();
                TR.EnterLog(": تم حذف فاتورة إيجار برقم " + Rent_id);
            }
            else
            {
                TR.Show_Message("تم إلغاء عملية الحذف");
            }
            CLEAR_TEXT_BOX(this);
            TXT_Emp.Text = Program.Casheir_Name;
        }

        private void bunifuFlatButton1_Click(object sender, EventArgs e)
        {
            lbl_cash.Visible = true;
            txt_cash.Visible = true;
        }

        private void dgvRentPos_Click(object sender, EventArgs e)
        {
            dr.DesibleCombo(bnl_1,false);
            PAID.ReadOnly = true;
            BTN_PAY.Enabled = true;
            btn_del.Enabled = true;
            btn_new.Enabled = true;
            btn_save.Enabled = false;
            btn_edit.Enabled = true;
            bnl_1.Enabled = true;
            bunifuFlatButton4.Enabled = true;
            try
            {
             // combo();
                Rent_id = Convert.ToInt32(gridView2.GetFocusedRowCellValue("الرقم"));
                combo_Rent.Text = Convert.ToString(gridView2.GetFocusedRowCellValue("النوع"));
                TXT_Name.Text = Convert.ToString(gridView2.GetFocusedRowCellValue("العميل"));
                TXT_PRICE.Text = Convert.ToString(gridView2.GetFocusedRowCellValue("المبلغ"));
                PAID.Text = Convert.ToString(gridView2.GetFocusedRowCellValue("المدفوع"));
                TXT_Resave.Text = Convert.ToString(gridView2.GetFocusedRowCellValue("الضمان"));
                TXT_Phone.Text = Convert.ToString(gridView2.GetFocusedRowCellValue("الهاتف"));
                TXT_Emp.Text = Convert.ToString(gridView2.GetFocusedRowCellValue("الموظف"));
                WITHDROW.Text = Convert.ToString(gridView2.GetFocusedRowCellValue("المتبقي"));
                string d = Convert.ToString(gridView2.GetFocusedRowCellValue("التاريخ"));
                EnteryDate.Value = Convert.ToDateTime(d);
            }
            catch
            {
                return;
            }
        }

        private void txt_cash_Leave(object sender, EventArgs e)
        {
            try
            {

                if (Convert.ToDouble(txt_cash.Text) > Convert.ToDouble(WITHDROW.Text))
                {
                    TR.Show_Message("عذراً : المبلغ المدفوع أكبر من المبلغ المتبقي");
                    return;
                }
                else
                {
                    PAID1 = Convert.ToDouble(PAID.Text) + Convert.ToDouble(txt_cash.Text);
                    WITHDROW1 = Convert.ToDouble(WITHDROW.Text) - Convert.ToDouble(txt_cash.Text);

                    PAID.Text = PAID1.ToString();
                    WITHDROW.Text = WITHDROW1.ToString();
                }
            }
            catch
            {
                return;
            }
        }

        double PAID1, WITHDROW1;

        private void bunifuFlatButton4_Click(object sender, EventArgs e)
        {
            this.Cursor = Cursors.WaitCursor;
            Rent_Invoice TK = new Rent_Invoice();
            TK.Parameters["Rent_Code"].Value = Rent_id;
            ReportPrintTool printTool = new ReportPrintTool(TK);
            printTool.PreviewForm.StartPosition = FormStartPosition.CenterScreen;
            printTool.ShowPreviewDialog();
            this.Cursor = Cursors.Default;
            bunifuFlatButton4.Enabled = false;
            btn_edit.Enabled = false;
            btn_del.Enabled = false;
            btn_save.Enabled = false;
            
          //CLEAR_TEXT_BOX(this);
        }
        CONTROLS.DropShaddow dr = new CONTROLS.DropShaddow();
        private void TXT_PRICE_KeyPress(object sender, KeyPressEventArgs e)
        {
            dr.JustNumber(e);
        }

        private void PAID_KeyPress(object sender, KeyPressEventArgs e)
        {
            dr.JustNumber(e);
        }

        private void WITHDROW_KeyPress(object sender, KeyPressEventArgs e)
        {
            dr.JustNumber(e);
        }

        private void txt_cash_KeyPress(object sender, KeyPressEventArgs e)
        {
            dr.JustNumber(e);
            
        }

        private void TXT_Phone_KeyPress(object sender, KeyPressEventArgs e)
        {
            dr.JustNumber(e);
        }

        private void TXT_Name_KeyPress(object sender, KeyPressEventArgs e)
        {
            dr.JustString(e);
        }

        private void txt_cash_KeyUp(object sender, KeyEventArgs e)
        {
            
        }

        private void txt_cash_KeyDown(object sender, KeyEventArgs e)
        {
           
        }
    }
}
