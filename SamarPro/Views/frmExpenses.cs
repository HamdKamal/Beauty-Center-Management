using SamarPro.CONTROLS;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace SamarPro.Views
{
    public partial class frmExpenses : Form
    {
        int Expenses_ID; // for any ID Of Each form 

        CONTROLS.BusneisLayer BL = new CONTROLS.BusneisLayer();
        TransationModule TR = new TransationModule();
        DropShaddow DR = new DropShaddow();
        void CLEAR_TEXT_BOX(Control CN)
        {

            foreach (Control C in CN.Controls)
                if (C is TextBox)

                    ((TextBox)C).Clear();

                else

                    CLEAR_TEXT_BOX(C);

        }
        void Amal(Boolean SOL)
        {
            btn_del.Enabled = SOL;
            btn_edit.Enabled = SOL;
            btn_save.Enabled = SOL;

        }
        public frmExpenses()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource
            sqlDataSource1.Fill();
        }

        private void bunifuImageButton1_Click(object sender, EventArgs e)
        {
            Close();
        }

        private void btn_new_Click(object sender, EventArgs e)
        {
            CLEAR_TEXT_BOX(this);
            pnl_1.Enabled = true;
            btn_save.Enabled = true;
            btn_new.Enabled = false;
            btn_del.Enabled = false;
            btn_edit.Enabled = false;
            Paydate.Text = DateTime.Now.ToShortDateString();
        }

        private void frmExpenses_Load(object sender, EventArgs e)
        {
            pnl_1.Enabled = false;
            Amal(false);
        }

        int E_id;
        private void btn_save_Click(object sender, EventArgs e)
        {
            // this code for save data in database
            if (txtType.Text == string.Empty || txtprice.Text == string.Empty)
            {
                TR.Show_Message("الرجاء إدخال جميع الحقول");
                return;
            }
            if (txtType.Text == "سلفية موظف")
            {
                double M = Convert.ToDouble(txtprice.Text);
                TR.CalculateAdversary(E_id,txtNote.Text,M);

                db_model db = new db_model();
                Expense ac = new Expense
                {

                    Type = txtType.Text,
                    Money = Convert.ToDouble(txtprice.Text),
                    Note = txtNote.Text,
                    E_date = Paydate.Value
                };
                db.Entry(ac).State = System.Data.Entity.EntityState.Added;
                db.SaveChanges();
                sqlDataSource1.Fill();
                pnl_1.Enabled = false;
                Amal(false);
                btn_save.Enabled = false;
                btn_new.Enabled = true;           
                TR.EnterLog(": تم إضافة مصروف جديد بأسم " + txtType.Text);
                TR.Show_Message("تم إضافة مصروف");
                CLEAR_TEXT_BOX(this);
            }
            else
            {
                db_model db = new db_model();
                Expense ac = new Expense
                {

                    Type = txtType.Text,
                    Money = Convert.ToDouble(txtprice.Text),
                    Note = txtNote.Text,
                    E_date = Paydate.Value
                };
                db.Entry(ac).State = System.Data.Entity.EntityState.Added;
                db.SaveChanges();
                sqlDataSource1.Fill();
                TR.Show_Message("تم إضافة مصروف");
                pnl_1.Enabled = false;
                Amal(false);
                btn_save.Enabled = false;
                btn_new.Enabled = true;
                CLEAR_TEXT_BOX(this);
                TR.EnterLog(": تم إضافة مصروف جديد بأسم " + txtType.Text);
            }           
        }

        private void btn_del_Click(object sender, EventArgs e)
        {
            if (MessageBox.Show("هل تريد حذف المصروف المحدد!", "عملية الحذف", MessageBoxButtons.YesNo, MessageBoxIcon.Exclamation) == DialogResult.Yes)
            {
                db_model db = new db_model();
                Expense ac = (from c in db.Expenses where c.ID == Expenses_ID select c).FirstOrDefault();
                db.Expenses.Where(a => a.ID == Expenses_ID).Select(s => s).FirstOrDefault();
                db.Entry(ac).State = System.Data.Entity.EntityState.Deleted;

                db.SaveChanges();
                TR.Show_Message("تم حذف مصروف");
                sqlDataSource1.Fill();
                TR.EnterLog(": تم حذف مصروف  بأسم " + txtType.Text);
            }
            else
            {
                TR.Show_Message("تم إلغاء عملية الحذف");
                //MessageBox.Show("تم إلغاء عملية الحذف", "عملية الحذف", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
            }
            CLEAR_TEXT_BOX(this);
          
        }

        private void btn_edit_Click(object sender, EventArgs e)
        {
            db_model db = new db_model();
            Expense ac = new Expense
            {
                ID = Expenses_ID,
                Type = txtType.Text,
                Money = Convert.ToDouble(txtprice.Text),
                Note = txtNote.Text,
                E_date = Paydate.Value
            };

            db.Entry(ac).State = System.Data.Entity.EntityState.Modified;
            db.SaveChanges();
            TR.Show_Message("تم تعديل مصروف");
            sqlDataSource1.Fill();
            pnl_1.Enabled = false;
            Amal(false);
            btn_edit.Enabled = false;
            btn_new.Enabled = true;
            CLEAR_TEXT_BOX(this);
            TR.EnterLog(": تم تعديل مصروف  بأسم " + txtType.Text);
        }

        private void dgvShow_Click(object sender, EventArgs e)
        {
            btn_del.Enabled = true;
            btn_new.Enabled = true;
            btn_save.Enabled = false;
            btn_edit.Enabled = true;
            pnl_1.Enabled = true;
            try
            {
                Expenses_ID = Convert.ToInt32(gridView2.GetFocusedRowCellValue("معرف الصرف"));
                txtType.Text = Convert.ToString(gridView2.GetFocusedRowCellValue("نوع الصرف"));
                txtNote.Text = Convert.ToString(gridView2.GetFocusedRowCellValue("ملاحظة"));
                txtprice.Text = Convert.ToString(gridView2.GetFocusedRowCellValue("المبلغ"));

                string d = Convert.ToString(gridView2.GetFocusedRowCellValue("تاريخ الصرف"));
                Paydate.Value = Convert.ToDateTime(d);
            }
            catch
            {
                return;
            }
        }

        private void txtType_SelectedIndexChanged(object sender, EventArgs e)
        {

            if(txtType.Text == "سلفية موظف")
            {
                lbl_Emp.Visible = true;
                Com_Emp.Visible = true;

            }
            else
            {
                lbl_Emp.Visible = false;
                Com_Emp.Visible = false;
            }
        }

        private void txtType_KeyDown(object sender, KeyEventArgs e)
        {
           
        }

        private void txtType_KeyPress(object sender, KeyPressEventArgs e)
        {
            DR.For_Quan(e);
        }

        private void Com_Emp_SelectedIndexChanged(object sender, EventArgs e)
        {
            E_id = Convert.ToInt32(Com_Emp.SelectedValue);
        }

        private void Com_Emp_KeyPress(object sender, KeyPressEventArgs e)
        {
            DR.For_Quan(e);
        }

        private void txtprice_KeyPress(object sender, KeyPressEventArgs e)
        {
            DR.JustNumber(e);
        }

        private void txtNote_KeyPress(object sender, KeyPressEventArgs e)
        {
            
        }
    }
}
