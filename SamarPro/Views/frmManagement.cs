using DevExpress.XtraReports.UI;
using SamarPro.Reports;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace SamarPro.Views
{
    public partial class frmManagement : Form
    {
        TransationModule TR = new TransationModule();
        void CLEAR_TEXT_BOX(Control CN)
        {

            foreach (Control C in CN.Controls)
                if (C is TextBox)

                    ((TextBox)C).Clear();

                else

                    CLEAR_TEXT_BOX(C);

        }
        public frmManagement()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
           // Fill a SqlDataSource
              sqlDataSource1.Fill();
        }

        private void bunifuTileButton1_Click(object sender, EventArgs e)
        {
           // sqlDataSource1.Fill();
        }

        private void bunifuImageButton1_Click(object sender, EventArgs e)
        {
            Close();
        }

        private void dgvRes_Click(object sender, EventArgs e)
        {
            btnedit.Enabled = true;
            btn_print.Enabled = true;
            txtMoney.Text = "0";
            txtMoney.Enabled = true;
            try
            {
                TXTID.Text = Convert.ToString(gridView1.GetFocusedRowCellValue("رقم الحجز"));
                txtName.Text = Convert.ToString(gridView1.GetFocusedRowCellValue("إسم العميل"));
                txtService.Text = Convert.ToString(gridView1.GetFocusedRowCellValue("نوع الخدمة"));
                txtPhone.Text = Convert.ToString(gridView1.GetFocusedRowCellValue("رقم الهاتف"));
               
                x = Convert.ToDouble(gridView1.GetFocusedRowCellValue("المبلغ الكلي"));
                y = Convert.ToDouble(gridView1.GetFocusedRowCellValue("المبلغ المدفوع"));
                z = Convert.ToDouble(gridView1.GetFocusedRowCellValue("المبلغ المتبقي"));

                total.Text = x.ToString();
                Paid.Text = y.ToString();
                Withdrow.Text = z.ToString();

            }
            catch
            {
                return;
            }
        }
        double x, y, z;

        private void btnedit_Click(object sender, EventArgs e)
        {
            txtMoney.Enabled = false;
            foreach (Control C in this.Controls)

                if (C is TextBox)
                {
                    if (C.Text == "")
                    {
                        TR.Show_Message("الرجاء إختيار عنصر واحد من القائمة");
                        return;
                    }
                }
                        

            if (txtMoney.Text =="0" || txtMoney.Text =="")
            {
                return;
            }
            try
            {
                int id = Convert.ToInt16(TXTID.Text);
                db_model db = new db_model();
                Reservation ac = (from c in db.Reservations where c.Code == id select c).FirstOrDefault();
                db.Reservations.Where(s => s.Code == id).Select(s => s).FirstOrDefault();
                ac.Paid = PAID;
                ac.dayDate = DateTime.Now;
                ac.withdrow = WITHDROW;
                db.SaveChanges();
                TR.Show_Message("تم سداد دفعة حجز جديدة");
                sqlDataSource1.Fill();
                CLEAR_TEXT_BOX(this);
                txtMoney.Text = "0";
                btnedit.Enabled = false;
                TR.EnterLog(": تم سداد دفعة حجز جديدة لرقم الحجز" + TXTID.Text);
            }
            catch
            {
                return;
            }
            
        }
        private void btn_print_Click(object sender, EventArgs e)
        {
            this.Cursor = Cursors.WaitCursor;
            Res_Invoice TK = new Res_Invoice();
            TK.Parameters["Res_Code"].Value = Convert.ToInt16(TXTID.Text);
            ReportPrintTool printTool = new ReportPrintTool(TK);
            printTool.PreviewForm.StartPosition = FormStartPosition.CenterScreen;
            printTool.ShowPreviewDialog();
            this.Cursor = Cursors.Default;
            btn_print.Enabled = false;
            CLEAR_TEXT_BOX(this);
            txtMoney.Text = "0";
        }

        private void txtMoney_KeyDown(object sender, KeyEventArgs e)
        {
            
        }

        private void txtMoney_KeyPress(object sender, KeyPressEventArgs e)
        {
            CONTROLS.DropShaddow dr = new CONTROLS.DropShaddow();
            dr.JustNumber(e);
        }

        private void txtMoney_KeyUp(object sender, KeyEventArgs e)
        {
            
            try
            {
                double TOTAL = x;
                double MADFO = y;
                double MOTBGI = z;

                if (Convert.ToDouble(txtMoney.Text) > MOTBGI)
                {
                    btnedit.Enabled = false;
                    TR.Show_Message("عذراً : المبلغ المدفوع أكبر من المبلغ المتبقي");
                    return;                 
                }

                else
                {
                    PAID = MADFO + Convert.ToDouble(txtMoney.Text);
                    WITHDROW = MOTBGI - Convert.ToDouble(txtMoney.Text);

                    Paid.Text = PAID.ToString();
                    Withdrow.Text = WITHDROW.ToString();
                    btnedit.Enabled = true;
                }
            }
            catch
            {
                return;

            }
        }

        double PAID, WITHDROW;
        private void txtMoney_Leave(object sender, EventArgs e)
        {
            try
            {
                if (Convert.ToDouble(Paid.Text) > Convert.ToDouble(total.Text))
                {
                    TR.Show_Message("! تم سداد قيمة الفاتورة");
                    return;
                }
            }
            catch
            {
                return;
            }
            
        }
    }
}
